{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/index.jsx","components/Filter/index.jsx","components/ContactList/index.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContacts","ContactForm","state","inputHandler","target","value","setState","submitHandler","event","preventDefault","hasContactName","props","myContacts","some","item","hasContactNumber","toast","error","createContact","this","className","styles","form","onSubmit","label","onChange","type","placeholder","input","pattern","button","autoClose","Component","connect","phonebook","items","dispatch","filter","contacts","filterStr","contact","toLowerCase","includes","list","map","onClick","App","container","createReducer","findIndex","slice","_state","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf98ae52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__uOMBT\",\"item\":\"ContactList_item__1rCrf\",\"button\":\"ContactList_button__23rYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Lhxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2OizH\",\"label\":\"ContactForm_label__19EJE\",\"input\":\"ContactForm_input__2C8yl\",\"button\":\"ContactForm_button__1rHeQ\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('ADD_CONTACT', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('DELETE_CONTACT');\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport { addContact, deleteContact, filterContacts };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputHandler = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const hasContactName = this.props.myContacts.some(item => {\r\n      return item.name === name;\r\n    });\r\n    const hasContactNumber = this.props.myContacts.some(item => {\r\n      return item.number === number;\r\n    });\r\n\r\n    if (hasContactName) {\r\n      toast.error(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (hasContactNumber) {\r\n      toast.error(`${number} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.props.createContact(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.submitHandler}>\r\n          <label className={styles.label}>\r\n            {' '}\r\n            Name\r\n            <input\r\n              onChange={this.inputHandler}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Add name\"\r\n              value={name}\r\n              className={styles.input}\r\n            ></input>\r\n          </label>\r\n          <label className={styles.label}>\r\n            {' '}\r\n            Number\r\n            <input\r\n              onChange={this.inputHandler}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"111-11-11\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              value={number}\r\n              className={styles.input}\r\n            ></input>\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <ToastContainer autoClose={3000} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  myContacts: state.phonebook.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\r\nimport styles from '../ContactForm/ContactForm.module.css';\r\n\r\nconst Filter = ({ filter, inputHandler }) => {\r\n  return (\r\n    <div>\r\n      <h4>Find contacts by name</h4>\r\n      <label className={styles.label}>\r\n        <input\r\n          onChange={inputHandler}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          placeholder=\"Search name\"\r\n          value={filter}\r\n          className={styles.input}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  inputHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.phonebook.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  inputHandler: event => dispatch(filterContacts(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={styles.item} key={id}>\r\n            {name} - {number}\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst contactFilter = (contacts, filterStr) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filterStr.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.phonebook;\r\n\r\n  return {\r\n    contacts: contactFilter(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\nimport styles from './App.module.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <div className={styles.container}>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => {\r\n    const id = state.findIndex(contact => contact.id === payload);\r\n    return [...state.slice(0, id), ...state.slice(id + 1)];\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}